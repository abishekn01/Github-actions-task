name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: abishekn01/bankapp

jobs:
  Code_Checkout:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn compile
      
  Code_Review_with_SonarQube:
    runs-on: ubuntu-latest
    needs: Code_Checkout
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Project
        run: mvn package
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/*.jar 
        
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # recommended for SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}   

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  Docker_Login:
    runs-on: ubuntu-latest
    needs: Code_Review_with_SonarQube
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
  Docker_Build_and_Push:
    runs-on: ubuntu-latest
    needs: Docker_Login
    steps:
      - uses: actions/checkout@v4
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: app  # JAR will be in ./app folder    

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest
          file: ./Dockerfile
          
  Docker_Pull:
    runs-on: ubuntu-latest
    needs: Docker_Build_and_Push
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull Docker Image
        run: docker pull $IMAGE_NAME:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Docker_Pull
    steps:
      - name: Run Container
        run: |
          docker run -d -p 9000:9000 --name bankapp $IMAGE_NAME:latest

